

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Thu Jun 07 18:19:00 2018

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F685
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text516,local,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,delta=2
    11                           	psect	text517,local,class=CODE,delta=2
    12                           	psect	text518,local,class=CODE,delta=2
    13                           	psect	text519,local,class=CODE,delta=2
    14                           	psect	text520,local,class=CODE,delta=2
    15                           	psect	text521,local,class=CODE,delta=2
    16                           	psect	text522,local,class=CODE,delta=2
    17                           	psect	text523,local,class=CODE,delta=2
    18                           	psect	text524,local,class=CODE,delta=2
    19                           	psect	text525,local,class=CODE,delta=2
    20                           	psect	text526,local,class=CODE,delta=2
    21                           	psect	text527,local,class=CODE,delta=2
    22                           	psect	text528,local,class=CODE,delta=2
    23                           	psect	text529,local,class=CODE,delta=2
    24                           	psect	text530,local,class=CODE,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text531,local,class=CODE,delta=2
    27                           	psect	pa_nodes,global,class=CODE,delta=2
    28                           	dabs	1,0x19D,1
    29                           	dabs	1,0x19E,1
    30                           	dabs	1,0x19E,1
    31                           	dabs	1,0x19E,1
    32                           	dabs	1,0x18C,1
    33                           	dabs	1,0x19E,1
    34                           	dabs	1,0x19E,1
    35                           	dabs	1,0x19E,1
    36                           	dabs	1,0x19E,1
    37                           	dabs	1,0x19D,1
    38                           	dabs	1,0x19D,1
    39                           	dabs	1,0x19D,1
    40                           	dabs	1,0x19D,1
    41                           	dabs	1,0x19D,1
    42                           	dabs	1,0x18C,1
    43                           	dabs	1,0x7E,2
    44  000A                     
    45                           	psect	text516
    46  0000                     __ptext516:	
    47  019D                     _PSTRCON	set	413	;_PSTRCON
    48  019E                     _SRCON	set	414	;_SRCON
    49  0CF5                     _C1SEN	set	3317	;_C1SEN
    50  0CF4                     _C2REN	set	3316	;_C2REN
    51  0C67                     _EEPGD	set	3175	;_EEPGD
    52  0CF2                     _PULSR	set	3314	;_PULSR
    53  0CF3                     _PULSS	set	3315	;_PULSS
    54  0CF6                     _SR0	set	3318	;_SR0
    55  0CF7                     _SR1	set	3319	;_SR1
    56  0CE8                     _STRA	set	3304	;_STRA
    57  0CE9                     _STRB	set	3305	;_STRB
    58  0CEA                     _STRC	set	3306	;_STRC
    59  0CEB                     _STRD	set	3307	;_STRD
    60  0CEC                     _STRSYNC	set	3308	;_STRSYNC
    61  0C62                     _WREN	set	3170	;_WREN
    62  001F                     _ADCON0	set	31
    63  001E                     _ADRESH	set	30
    64  0018                     _WDTCON	set	24
    65  00FF                     _ADFM	set	255
    66  00F8                     _ADON	set	248
    67  00FA                     _CHS0	set	250
    68  00FB                     _CHS1	set	251
    69  00FC                     _CHS2	set	252
    70  00C8                     _CM0	set	200
    71  00C9                     _CM1	set	201
    72  00CA                     _CM2	set	202
    73  0067                     _EEIF	set	103
    74  005F                     _GIE	set	95
    75  00F9                     _GO_DONE	set	249
    76  002E                     _PA6	set	46
    77  003A                     _PC2	set	58
    78  003B                     _PC3	set	59
    79  00FD                     _VCFG0	set	253
    80  009E                     _ADRESL	set	158
    81  009B                     _EEADR	set	155
    82  009C                     _EECON1	set	156
    83  009A                     _EEDAT	set	154
    84  0081                     _OPTION	set	129
    85  008F                     _OSCCON	set	143
    86  04FC                     _ADCS0	set	1276
    87  04FD                     _ADCS1	set	1277
    88  04FE                     _ADCS2	set	1278
    89  0488                     _ANSEL0	set	1160
    90  0489                     _ANSEL1	set	1161
    91  048A                     _ANSEL2	set	1162
    92  048B                     _ANSEL3	set	1163
    93  048C                     _ANSEL4	set	1164
    94  048D                     _ANSEL5	set	1165
    95  048E                     _ANSEL6	set	1166
    96  048F                     _ANSEL7	set	1167
    97  04FF                     _DIVS	set	1279
    98  04E0                     _RD	set	1248
    99  0428                     _TRISA0	set	1064
   100  0429                     _TRISA1	set	1065
   101  042E                     _TRISA6	set	1070
   102  0439                     _TRISC1	set	1081
   103  043A                     _TRISC2	set	1082
   104  043B                     _TRISC3	set	1083
   105  044C                     _WPDA4	set	1100
   106  044B                     _WPDC1	set	1099
   107  044A                     _WPDC2	set	1098
   108  0449                     _WPDC3	set	1097
   109  04A8                     _WPUA0	set	1192
   110  04A9                     _WPUA1	set	1193
   111  04AE                     _WPUA6	set	1198
   112  0441                     _WPUC1	set	1089
   113  0442                     _WPUC2	set	1090
   114  0443                     _WPUC3	set	1091
   115  04E8                     _WR	set	1256
   116                           
   117                           	psect	cinit
   118  0132                     start_initialization:	
   119                           
   120                           ; Clear objects allocated to COMMON
   121  0132  01F8               	clrf	__pbssCOMMON& (0+127)
   122  0133  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   123  0134  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   124  0135  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   125                           
   126                           ; Clear objects allocated to BANK0
   127  0136  01A0               	clrf	__pbssBANK0& (0+127)
   128  0137  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   129  0138  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   130  0139  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   131  013A                     end_of_initialization:	
   132                           ;End of C runtime variable initialization code
   133                           
   134  013A  0183               	clrf	3
   135  013B  280B               	ljmp	_main	;jump to C main() function
   136                           
   137                           	psect	bssCOMMON
   138  0078                     __pbssCOMMON:	
   139  0078                     _ADC1_ADCOUT:	
   140  0078                     	ds	2
   141  007A                     _i:	
   142  007A                     	ds	1
   143  007B                     _j:	
   144  007B                     	ds	1
   145                           
   146                           	psect	bssBANK0
   147  0020                     __pbssBANK0:	
   148  0020                     _ADC6_INPUT:	
   149  0020                     	ds	2
   150  0022                     _ADC_STUDY_VALUE:	
   151  0022                     	ds	2
   152                           
   153                           	psect	cstackCOMMON
   154  0070                     __pcstackCOMMON:	
   155  0070                     ?_System_init:	
   156  0070                     ?_GPIO_Init:	
   157                           ; 0 bytes @ 0x0
   158                           
   159  0070                     ?_ADC_Init:	
   160                           ; 0 bytes @ 0x0
   161                           
   162  0070                     ?_EEPROM_Init:	
   163                           ; 0 bytes @ 0x0
   164                           
   165  0070                     ?_LED_Study_End:	
   166                           ; 0 bytes @ 0x0
   167                           
   168  0070                     ?_ExchChannel:	
   169                           ; 0 bytes @ 0x0
   170                           
   171  0070                     ?_main:	
   172                           ; 0 bytes @ 0x0
   173                           
   174  0070                     ?_ISR:	
   175                           ; 0 bytes @ 0x0
   176                           
   177  0070                     ??_ISR:	
   178                           ; 0 bytes @ 0x0
   179                           
   180  0070                     ?_isKeyPressed:	
   181                           ; 0 bytes @ 0x0
   182                           
   183  0070                     ?_Read_EEPROM_u8:	
   184                           ; 1 bytes @ 0x0
   185                           
   186                           
   187                           ; 1 bytes @ 0x0
   188  0070                     	ds	2
   189  0072                     ??_System_init:	
   190  0072                     ??_GPIO_Init:	
   191                           ; 0 bytes @ 0x2
   192                           
   193  0072                     ??_ExchChannel:	
   194                           ; 0 bytes @ 0x2
   195                           
   196  0072                     ?_Delay_xms:	
   197                           ; 0 bytes @ 0x2
   198                           
   199  0072                     ??_isKeyPressed:	
   200                           ; 0 bytes @ 0x2
   201                           
   202  0072                     ?_Write_EEPROM_u8:	
   203                           ; 0 bytes @ 0x2
   204                           
   205  0072                     ??_Read_EEPROM_u8:	
   206                           ; 0 bytes @ 0x2
   207                           
   208  0072                     ?_GetADCValue:	
   209                           ; 0 bytes @ 0x2
   210                           
   211  0072                     Write_EEPROM_u8@EEDatas:	
   212                           ; 2 bytes @ 0x2
   213                           
   214  0072                     Read_EEPROM_u8@EEAddress:	
   215                           ; 1 bytes @ 0x2
   216                           
   217  0072                     Delay_xms@x:	
   218                           ; 1 bytes @ 0x2
   219                           
   220                           
   221                           ; 2 bytes @ 0x2
   222  0072                     	ds	1
   223  0073                     ??_Write_EEPROM_u8:	
   224  0073                     Write_EEPROM_u8@EEAddress:	
   225                           ; 0 bytes @ 0x3
   226                           
   227  0073                     Read_EEPROM_u8@ReEepromData:	
   228                           ; 1 bytes @ 0x3
   229                           
   230                           
   231                           ; 1 bytes @ 0x3
   232  0073                     	ds	1
   233  0074                     ??_EEPROM_Init:	
   234  0074                     ??_GetADCValue:	
   235                           ; 0 bytes @ 0x4
   236                           
   237  0074                     ??_Delay_xms:	
   238                           ; 0 bytes @ 0x4
   239                           
   240  0074                     ?_Write_EEPROM_u16:	
   241                           ; 0 bytes @ 0x4
   242                           
   243  0074                     ?_Read_EEPROM_u16:	
   244                           ; 0 bytes @ 0x4
   245                           
   246  0074                     ExchChannel@ch_temp:	
   247                           ; 2 bytes @ 0x4
   248                           
   249  0074                     GetADCValue@ADC_num:	
   250                           ; 1 bytes @ 0x4
   251                           
   252  0074                     Write_EEPROM_u16@EEDatas:	
   253                           ; 2 bytes @ 0x4
   254                           
   255                           
   256                           ; 2 bytes @ 0x4
   257  0074                     	ds	1
   258  0075                     ExchChannel@adc_ch_temp:	
   259                           
   260                           ; 1 bytes @ 0x5
   261  0075                     	ds	1
   262  0076                     ??_Read_EEPROM_u16:	
   263  0076                     ??_Write_EEPROM_u16:	
   264                           ; 0 bytes @ 0x6
   265                           
   266  0076                     Delay_xms@i:	
   267                           ; 0 bytes @ 0x6
   268                           
   269                           
   270                           ; 2 bytes @ 0x6
   271  0076                     	ds	2
   272  0078                     ??_ADC_Init:	
   273  0078                     ??_LED_Study_End:	
   274                           ; 0 bytes @ 0x8
   275                           
   276  0078                     ??_main:	
   277                           ; 0 bytes @ 0x8
   278                           
   279                           
   280                           	psect	cstackBANK0
   281  0024                     __pcstackBANK0:	
   282                           ; 0 bytes @ 0x8
   283                           
   284  0024                     Write_EEPROM_u16@DATA_H:	
   285  0024                     Read_EEPROM_u16@EepromData:	
   286                           ; 1 bytes @ 0x0
   287                           
   288                           
   289                           ; 2 bytes @ 0x0
   290  0024                     	ds	1
   291  0025                     Write_EEPROM_u16@DATA_L:	
   292                           
   293                           ; 1 bytes @ 0x1
   294  0025                     	ds	1
   295  0026                     Write_EEPROM_u16@EEAddress:	
   296  0026                     Read_EEPROM_u16@EEAddress:	
   297                           ; 1 bytes @ 0x2
   298                           
   299                           
   300                           ; 1 bytes @ 0x2
   301  0026                     	ds	1
   302                           
   303                           	psect	maintext
   304  000B                     __pmaintext:	
   305 ;;Data sizes: Strings 0, constant 0, data 0, bss 8, persistent 0 stack 0
   306 ;;Auto spaces:   Size  Autos    Used
   307 ;; COMMON          14      8      12
   308 ;; BANK0           80      3       7
   309 ;; BANK1           32      0       0
   310 ;;
   311 ;; Pointer list with targets:
   312 ;; ?_Read_EEPROM_u16	unsigned int  size(1) Largest target is 0
   313 ;;
   314 ;; ?_GetADCValue	unsigned short  size(1) Largest target is 0
   315 ;;
   316 ;;
   317 ;; Critical Paths under _main in COMMON
   318 ;;
   319 ;;   _main->_Delay_xms
   320 ;;   _LED_Study_End->_Delay_xms
   321 ;;   _ADC_Init->_Delay_xms
   322 ;;   _Write_EEPROM_u16->_Write_EEPROM_u8
   323 ;;   _Read_EEPROM_u16->_Read_EEPROM_u8
   324 ;;   _EEPROM_Init->_Write_EEPROM_u8
   325 ;;
   326 ;; Critical Paths under _ISR in COMMON
   327 ;;
   328 ;;   None.
   329 ;;
   330 ;; Critical Paths under _main in BANK0
   331 ;;
   332 ;;   _main->_Read_EEPROM_u16
   333 ;;   _main->_Write_EEPROM_u16
   334 ;;
   335 ;; Critical Paths under _ISR in BANK0
   336 ;;
   337 ;;   None.
   338 ;;
   339 ;; Critical Paths under _main in BANK1
   340 ;;
   341 ;;   None.
   342 ;;
   343 ;; Critical Paths under _ISR in BANK1
   344 ;;
   345 ;;   None.
   346 ;;
   347 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   348 ;;
   349 ;;
   350 ;;Call Graph Tables:
   351 ;;
   352 ;; ---------------------------------------------------------------------------------
   353 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   354 ;; ---------------------------------------------------------------------------------
   355 ;; (0) _main                                                 0     0      0     702
   356 ;;                        _System_init
   357 ;;                          _GPIO_Init
   358 ;;                           _ADC_Init
   359 ;;                        _EEPROM_Init
   360 ;;                    _Read_EEPROM_u16
   361 ;;                      _LED_Study_End
   362 ;;                        _ExchChannel
   363 ;;                        _GetADCValue
   364 ;;                          _Delay_xms
   365 ;;                       _isKeyPressed
   366 ;;                   _Write_EEPROM_u16
   367 ;; ---------------------------------------------------------------------------------
   368 ;; (1) _LED_Study_End                                        0     0      0      46
   369 ;;                          _Delay_xms
   370 ;; ---------------------------------------------------------------------------------
   371 ;; (1) _ADC_Init                                             0     0      0      46
   372 ;;                          _Delay_xms
   373 ;; ---------------------------------------------------------------------------------
   374 ;; (1) _Write_EEPROM_u16                                     5     3      2     260
   375 ;;                                              4 COMMON     2     0      2
   376 ;;                                              0 BANK0      3     3      0
   377 ;;                    _Write_EEPROM_u8
   378 ;; ---------------------------------------------------------------------------------
   379 ;; (1) _Delay_xms                                            6     4      2      46
   380 ;;                                              2 COMMON     6     4      2
   381 ;; ---------------------------------------------------------------------------------
   382 ;; (1) _ExchChannel                                          4     4      0      46
   383 ;;                                              2 COMMON     4     4      0
   384 ;; ---------------------------------------------------------------------------------
   385 ;; (1) _Read_EEPROM_u16                                      5     3      2     170
   386 ;;                                              4 COMMON     2     0      2
   387 ;;                                              0 BANK0      3     3      0
   388 ;;                     _Read_EEPROM_u8
   389 ;; ---------------------------------------------------------------------------------
   390 ;; (1) _EEPROM_Init                                          0     0      0      62
   391 ;;                    _Write_EEPROM_u8
   392 ;; ---------------------------------------------------------------------------------
   393 ;; (2) _Read_EEPROM_u8                                       2     2      0      65
   394 ;;                                              2 COMMON     2     2      0
   395 ;; ---------------------------------------------------------------------------------
   396 ;; (2) _Write_EEPROM_u8                                      2     1      1      62
   397 ;;                                              2 COMMON     2     1      1
   398 ;; ---------------------------------------------------------------------------------
   399 ;; (1) _isKeyPressed                                         0     0      0       0
   400 ;; ---------------------------------------------------------------------------------
   401 ;; (1) _GetADCValue                                          4     2      2      26
   402 ;;                                              2 COMMON     4     2      2
   403 ;; ---------------------------------------------------------------------------------
   404 ;; (1) _GPIO_Init                                            0     0      0       0
   405 ;; ---------------------------------------------------------------------------------
   406 ;; (1) _System_init                                          0     0      0       0
   407 ;; ---------------------------------------------------------------------------------
   408 ;; Estimated maximum stack depth 2
   409 ;; ---------------------------------------------------------------------------------
   410 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   411 ;; ---------------------------------------------------------------------------------
   412 ;; (3) _ISR                                                  2     2      0       0
   413 ;;                                              0 COMMON     2     2      0
   414 ;; ---------------------------------------------------------------------------------
   415 ;; Estimated maximum stack depth 3
   416 ;; ---------------------------------------------------------------------------------
   417 ;; Call Graph Graphs:
   418 ;; _main (ROOT)
   419 ;;   _System_init
   420 ;;   _GPIO_Init
   421 ;;   _ADC_Init
   422 ;;     _Delay_xms
   423 ;;   _EEPROM_Init
   424 ;;     _Write_EEPROM_u8
   425 ;;   _Read_EEPROM_u16
   426 ;;     _Read_EEPROM_u8
   427 ;;   _LED_Study_End
   428 ;;     _Delay_xms
   429 ;;   _ExchChannel
   430 ;;   _GetADCValue
   431 ;;   _Delay_xms
   432 ;;   _isKeyPressed
   433 ;;   _Write_EEPROM_u16
   434 ;;     _Write_EEPROM_u8
   435 ;;
   436 ;; _ISR (ROOT)
   437 ;;
   438 ;; Address spaces:
   439 ;;Name               Size   Autos  Total    Cost      Usage
   440 ;;BITCOMMON            E      0       0       0        0.0%
   441 ;;EEDATA             100      0       0       0        0.0%
   442 ;;NULL                 0      0       0       0        0.0%
   443 ;;CODE                 0      0       0       0        0.0%
   444 ;;COMMON               E      8       C       1       85.7%
   445 ;;BITSFR0              0      0       0       1        0.0%
   446 ;;SFR0                 0      0       0       1        0.0%
   447 ;;BITSFR1              0      0       0       2        0.0%
   448 ;;SFR1                 0      0       0       2        0.0%
   449 ;;STACK                0      0       2       2        0.0%
   450 ;;BITBANK0            50      0       0       3        0.0%
   451 ;;BANK0               50      3       7       4        8.8%
   452 ;;BITBANK1            20      0       0       5        0.0%
   453 ;;BITSFR2              0      0       0       5        0.0%
   454 ;;SFR2                 0      0       0       5        0.0%
   455 ;;BANK1               20      0       0       6        0.0%
   456 ;;ABS                  0      0      13       7        0.0%
   457 ;;DATA                 0      0      15       8        0.0%
   458                           
   459                           
   460 ;; *************** function _main *****************
   461 ;; Defined at:
   462 ;;		line 33 in file "main.c"
   463 ;; Parameters:    Size  Location     Type
   464 ;;		None
   465 ;; Auto vars:     Size  Location     Type
   466 ;;		None
   467 ;; Return value:  Size  Location     Type
   468 ;;		None               void
   469 ;; Registers used:
   470 ;;		wreg, status,2, status,0, pclath, cstack
   471 ;; Tracked objects:
   472 ;;		On entry : 17F/0
   473 ;;		On exit  : 60/0
   474 ;;		Unchanged: 0/0
   475 ;; Data sizes:     COMMON   BANK0   BANK1
   476 ;;      Params:         0       0       0
   477 ;;      Locals:         0       0       0
   478 ;;      Temps:          0       0       0
   479 ;;      Totals:         0       0       0
   480 ;;Total ram usage:        0 bytes
   481 ;; Hardware stack levels required when called:    3
   482 ;; This function calls:
   483 ;;		_System_init
   484 ;;		_GPIO_Init
   485 ;;		_ADC_Init
   486 ;;		_EEPROM_Init
   487 ;;		_Read_EEPROM_u16
   488 ;;		_LED_Study_End
   489 ;;		_ExchChannel
   490 ;;		_GetADCValue
   491 ;;		_Delay_xms
   492 ;;		_isKeyPressed
   493 ;;		_Write_EEPROM_u16
   494 ;; This function is called by:
   495 ;;		Startup code after reset
   496 ;; This function uses a non-reentrant model
   497 ;;
   498  000B                     _main:	
   499                           
   500                           ;main.c: 35: System_init();
   501                           
   502                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   503  000B  2155               	fcall	_System_init
   504                           
   505                           ;main.c: 36: GPIO_Init();
   506  000C  2060               	fcall	_GPIO_Init
   507                           
   508                           ;main.c: 37: ADC_Init();
   509  000D  20B6               	fcall	_ADC_Init
   510                           
   511                           ;main.c: 38: EEPROM_Init();
   512  000E  2145               	fcall	_EEPROM_Init
   513  000F  3000               	movlw	0
   514                           
   515                           ;main.c: 39: PC2=0;
   516  0010  1283               	bcf	3,5	;RP0=0, select bank0
   517  0011  1107               	bcf	7,2
   518                           
   519                           ;main.c: 40: ADC_STUDY_VALUE = Read_EEPROM_u16(0x00);
   520  0012  2113               	fcall	_Read_EEPROM_u16
   521  0013  0875               	movf	?_Read_EEPROM_u16+1,w
   522  0014  00A3               	movwf	_ADC_STUDY_VALUE+1
   523  0015  0874               	movf	?_Read_EEPROM_u16,w
   524  0016  00A2               	movwf	_ADC_STUDY_VALUE
   525                           
   526                           ;main.c: 41: LED_Study_End();
   527  0017  207F               	fcall	_LED_Study_End
   528  0018                     l6858:	
   529                           
   530                           ;main.c: 44: ExchChannel(1);
   531  0018  3001               	movlw	1
   532  0019  20CF               	fcall	_ExchChannel
   533                           
   534                           ;main.c: 45: for(i=0;i<5;i++)
   535  001A  01FA               	clrf	_i
   536  001B                     l6866:	
   537                           
   538                           ;main.c: 46: ADC1_ADCOUT = GetADCValue();
   539  001B  2100               	fcall	_GetADCValue
   540  001C  0873               	movf	?_GetADCValue+1,w
   541  001D  00F9               	movwf	_ADC1_ADCOUT+1
   542  001E  0872               	movf	?_GetADCValue,w
   543  001F  00F8               	movwf	_ADC1_ADCOUT
   544  0020  3005               	movlw	5
   545  0021  0AFA               	incf	_i,f
   546  0022  027A               	subwf	_i,w
   547  0023  1C03               	skipc
   548  0024  281B               	goto	l6866
   549                           
   550                           ;main.c: 47: ExchChannel(5);
   551  0025  3005               	movlw	5
   552  0026  20CF               	fcall	_ExchChannel
   553                           
   554                           ;main.c: 48: for(j=0;j<5;j++)
   555  0027  01FB               	clrf	_j
   556  0028                     l6880:	
   557                           
   558                           ;main.c: 49: ADC6_INPUT = GetADCValue();
   559  0028  2100               	fcall	_GetADCValue
   560  0029  0873               	movf	?_GetADCValue+1,w
   561  002A  00A1               	movwf	_ADC6_INPUT+1
   562  002B  0872               	movf	?_GetADCValue,w
   563  002C  00A0               	movwf	_ADC6_INPUT
   564  002D  3005               	movlw	5
   565  002E  0AFB               	incf	_j,f
   566  002F  027B               	subwf	_j,w
   567  0030  1C03               	skipc
   568  0031  2828               	goto	l6880
   569                           
   570                           ;main.c: 50: Delay_xms(5);
   571  0032  3005               	movlw	5
   572  0033  00F2               	movwf	?_Delay_xms
   573  0034  01F3               	clrf	?_Delay_xms+1
   574  0035  20E8               	fcall	_Delay_xms
   575                           
   576                           ;main.c: 52: if(isKeyPressed())
   577  0036  213C               	fcall	_isKeyPressed
   578  0037  3A00               	xorlw	0
   579  0038  1903               	skipnz
   580  0039  284D               	goto	l1102
   581                           
   582                           ;main.c: 53: {
   583                           ;main.c: 54: PA6=1;
   584  003A  1705               	bsf	5,6
   585                           
   586                           ;main.c: 58: ADC_STUDY_VALUE = ADC1_ADCOUT;
   587  003B  0879               	movf	_ADC1_ADCOUT+1,w
   588  003C  00A3               	movwf	_ADC_STUDY_VALUE+1
   589  003D  0878               	movf	_ADC1_ADCOUT,w
   590  003E  00A2               	movwf	_ADC_STUDY_VALUE
   591                           
   592                           ;main.c: 59: Write_EEPROM_u16(0x00,ADC_STUDY_VALUE);
   593  003F  0823               	movf	_ADC_STUDY_VALUE+1,w
   594  0040  00F5               	movwf	?_Write_EEPROM_u16+1
   595  0041  0822               	movf	_ADC_STUDY_VALUE,w
   596  0042  00F4               	movwf	?_Write_EEPROM_u16
   597  0043  3000               	movlw	0
   598  0044  2123               	fcall	_Write_EEPROM_u16
   599                           
   600                           ;main.c: 60: Delay_xms(500);
   601  0045  30F4               	movlw	244
   602  0046  00F2               	movwf	?_Delay_xms
   603  0047  3001               	movlw	1
   604  0048  00F3               	movwf	?_Delay_xms+1
   605  0049  20E8               	fcall	_Delay_xms
   606                           
   607                           ;main.c: 61: PA6=0;
   608  004A  1283               	bcf	3,5	;RP0=0, select bank0
   609  004B  1303               	bcf	3,6	;RP1=0, select bank0
   610  004C  1305               	bcf	5,6
   611  004D                     l1102:	
   612                           
   613                           ;main.c: 62: }
   614                           ;main.c: 63: if(ADC6_INPUT < 512){
   615  004D  3002               	movlw	2
   616  004E  0221               	subwf	_ADC6_INPUT+1,w
   617  004F  3000               	movlw	0
   618  0050  1903               	skipnz
   619  0051  0220               	subwf	_ADC6_INPUT,w
   620  0052  1803               	skipnc
   621  0053  2856               	goto	l6900
   622  0054                     l6898:	
   623                           
   624                           ;main.c: 64: PC2 = 0;
   625  0054  1107               	bcf	7,2
   626                           
   627                           ;main.c: 65: }else{
   628  0055  2818               	goto	l6858
   629  0056                     l6900:	
   630                           
   631                           ;main.c: 66: if(ADC1_ADCOUT <= ADC_STUDY_VALUE){
   632  0056  0879               	movf	_ADC1_ADCOUT+1,w
   633  0057  0223               	subwf	_ADC_STUDY_VALUE+1,w
   634  0058  1D03               	skipz
   635  0059  285C               	goto	u255
   636  005A  0878               	movf	_ADC1_ADCOUT,w
   637  005B  0222               	subwf	_ADC_STUDY_VALUE,w
   638  005C                     u255:	
   639  005C  1803               	btfsc	3,0
   640  005D  2854               	goto	l6898
   641                           
   642                           ;main.c: 69: PC2=1;
   643  005E  1507               	bsf	7,2
   644  005F  2818               	goto	l6858
   645  0060                     __end_of_main:	
   646                           
   647                           	psect	text517
   648  007F                     __ptext517:	
   649 ;; =============== function _main ends ============
   650                           
   651                           
   652 ;; *************** function _LED_Study_End *****************
   653 ;; Defined at:
   654 ;;		line 63 in file "myconfiguration.c"
   655 ;; Parameters:    Size  Location     Type
   656 ;;		None
   657 ;; Auto vars:     Size  Location     Type
   658 ;;		None
   659 ;; Return value:  Size  Location     Type
   660 ;;		None               void
   661 ;; Registers used:
   662 ;;		wreg, status,2, status,0, pclath, cstack
   663 ;; Tracked objects:
   664 ;;		On entry : 60/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMMON   BANK0   BANK1
   668 ;;      Params:         0       0       0
   669 ;;      Locals:         0       0       0
   670 ;;      Temps:          0       0       0
   671 ;;      Totals:         0       0       0
   672 ;;Total ram usage:        0 bytes
   673 ;; Hardware stack levels used:    1
   674 ;; Hardware stack levels required when called:    2
   675 ;; This function calls:
   676 ;;		_Delay_xms
   677 ;; This function is called by:
   678 ;;		_main
   679 ;; This function uses a non-reentrant model
   680 ;;
   681  007F                     _LED_Study_End:	
   682  007F  3028               	movlw	40
   683                           
   684                           ;myconfiguration.c: 64: PA6 = 1;
   685                           
   686                           ; Regs used in _LED_Study_End: [wreg+status,2+status,0+pclath+cstack]
   687  0080  1705               	bsf	5,6
   688                           
   689                           ;myconfiguration.c: 65: Delay_xms(40);
   690  0081  00F2               	movwf	?_Delay_xms
   691  0082  01F3               	clrf	?_Delay_xms+1
   692  0083  20E8               	fcall	_Delay_xms
   693                           
   694                           ;myconfiguration.c: 66: PA6 = 0;
   695                           
   696                           ;myconfiguration.c: 67: Delay_xms(40);
   697  0084  208E               	fcall	PL2	;call to abstracted procedure
   698  0085  20E8               	fcall	_Delay_xms
   699                           
   700                           ;myconfiguration.c: 68: PA6 = 1;
   701                           
   702                           ;myconfiguration.c: 69: Delay_xms(40);
   703  0086  2095               	fcall	PL3	;call to abstracted procedure
   704  0087  20E8               	fcall	_Delay_xms
   705                           
   706                           ;myconfiguration.c: 70: PA6 = 0;
   707                           
   708                           ;myconfiguration.c: 71: Delay_xms(40);
   709  0088  208E               	fcall	PL2	;call to abstracted procedure
   710  0089  20E8               	fcall	_Delay_xms
   711                           
   712                           ;myconfiguration.c: 72: PA6 = 1;
   713                           
   714                           ;myconfiguration.c: 73: Delay_xms(40);
   715  008A  2095               	fcall	PL3	;call to abstracted procedure
   716  008B  20E8               	fcall	_Delay_xms
   717                           
   718                           ;myconfiguration.c: 74: PA6 = 0;
   719                           
   720                           ;myconfiguration.c: 75: Delay_xms(40);
   721  008C  208E               	fcall	PL2	;call to abstracted procedure
   722  008D  28E8               	ljmp	l6690
   723  008E                     __end_of_LED_Study_End:	
   724  008E                     PL2:	
   725  008E  3028               	movlw	40
   726  008F  1283               	bcf	3,5	;RP0=0, select bank0
   727  0090  1303               	bcf	3,6	;RP1=0, select bank0
   728  0091  1305               	bcf	5,6
   729  0092  00F2               	movwf	?_Delay_xms
   730  0093  01F3               	clrf	?_Delay_xms+1
   731  0094  0008               	return
   732  0095                     PL3:	
   733  0095  3028               	movlw	40
   734  0096  1283               	bcf	3,5	;RP0=0, select bank0
   735  0097  1303               	bcf	3,6	;RP1=0, select bank0
   736  0098  1705               	bsf	5,6
   737  0099  00F2               	movwf	?_Delay_xms
   738  009A  01F3               	clrf	?_Delay_xms+1
   739  009B  0008               	return
   740                           
   741                           	psect	text518
   742  00B6                     __ptext518:	
   743 ;; =============== function _LED_Study_End ends ============
   744                           
   745                           
   746 ;; *************** function _ADC_Init *****************
   747 ;; Defined at:
   748 ;;		line 18 in file "myadc.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;		None
   751 ;; Auto vars:     Size  Location     Type
   752 ;;		None
   753 ;; Return value:  Size  Location     Type
   754 ;;		None               void
   755 ;; Registers used:
   756 ;;		wreg, status,2, status,0, pclath, cstack
   757 ;; Tracked objects:
   758 ;;		On entry : 17F/20
   759 ;;		On exit  : 60/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMMON   BANK0   BANK1
   762 ;;      Params:         0       0       0
   763 ;;      Locals:         0       0       0
   764 ;;      Temps:          0       0       0
   765 ;;      Totals:         0       0       0
   766 ;;Total ram usage:        0 bytes
   767 ;; Hardware stack levels used:    1
   768 ;; Hardware stack levels required when called:    2
   769 ;; This function calls:
   770 ;;		_Delay_xms
   771 ;; This function is called by:
   772 ;;		_main
   773 ;; This function uses a non-reentrant model
   774 ;;
   775  00B6                     _ADC_Init:	
   776  00B6  3081               	movlw	129
   777                           
   778                           ;myadc.c: 20: TRISA1=1;
   779                           
   780                           ; Regs used in _ADC_Init: [wreg+status,2+status,0+pclath+cstack]
   781  00B7  1485               	bsf	5,1
   782                           
   783                           ;myadc.c: 21: TRISC1=1;
   784  00B8  1487               	bsf	7,1
   785                           
   786                           ;myadc.c: 22: ANSEL1=1;
   787  00B9  1491               	bsf	17,1
   788                           
   789                           ;myadc.c: 23: ANSEL5=1;
   790  00BA  1691               	bsf	17,5
   791                           
   792                           ;myadc.c: 26: DIVS=0;
   793  00BB  139F               	bcf	31,7
   794                           
   795                           ;myadc.c: 27: ADCS0=0;ADCS1=0;ADCS2=0;
   796  00BC  121F               	bcf	31,4
   797  00BD  129F               	bcf	31,5
   798  00BE  131F               	bcf	31,6
   799                           
   800                           ;myadc.c: 29: ADCON0=0B10000001;
   801  00BF  1283               	bcf	3,5	;RP0=0, select bank0
   802  00C0  009F               	movwf	31	;volatile
   803                           
   804                           ;myadc.c: 30: VCFG0=0;
   805  00C1  129F               	bcf	31,5
   806                           
   807                           ;myadc.c: 31: CHS0=1;CHS1=0;CHS2=1;
   808  00C2  151F               	bsf	31,2
   809  00C3  119F               	bcf	31,3
   810  00C4  161F               	bsf	31,4
   811                           
   812                           ;myadc.c: 32: ADFM=1;
   813  00C5  179F               	bsf	31,7
   814                           
   815                           ;myadc.c: 33: ADON=1;
   816  00C6  141F               	bsf	31,0
   817                           
   818                           ;myadc.c: 35: Delay_xms(1);
   819  00C7  01F2               	clrf	?_Delay_xms
   820  00C8  0AF2               	incf	?_Delay_xms,f
   821  00C9  01F3               	clrf	?_Delay_xms+1
   822  00CA  20E8               	fcall	_Delay_xms
   823                           
   824                           ;myadc.c: 37: GO_DONE=1;
   825  00CB  1283               	bcf	3,5	;RP0=0, select bank0
   826  00CC  1303               	bcf	3,6	;RP1=0, select bank0
   827  00CD  149F               	bsf	31,1
   828  00CE  0008               	return
   829  00CF                     __end_of_ADC_Init:	
   830                           
   831                           	psect	text519
   832  0123                     __ptext519:	
   833 ;; =============== function _ADC_Init ends ============
   834                           
   835                           
   836 ;; *************** function _Write_EEPROM_u16 *****************
   837 ;; Defined at:
   838 ;;		line 27 in file "myeeprom.c"
   839 ;; Parameters:    Size  Location     Type
   840 ;;  EEAddress       1    wreg     unsigned char 
   841 ;;  EEDatas         2    4[COMMON] unsigned int 
   842 ;; Auto vars:     Size  Location     Type
   843 ;;  EEAddress       1    2[BANK0 ] unsigned char 
   844 ;;  DATA_L          1    1[BANK0 ] unsigned char 
   845 ;;  DATA_H          1    0[BANK0 ] unsigned char 
   846 ;; Return value:  Size  Location     Type
   847 ;;		None               void
   848 ;; Registers used:
   849 ;;		wreg, status,2, status,0, pclath, cstack
   850 ;; Tracked objects:
   851 ;;		On entry : 60/0
   852 ;;		On exit  : 60/20
   853 ;;		Unchanged: FFE00/0
   854 ;; Data sizes:     COMMON   BANK0   BANK1
   855 ;;      Params:         2       0       0
   856 ;;      Locals:         0       3       0
   857 ;;      Temps:          0       0       0
   858 ;;      Totals:         2       3       0
   859 ;;Total ram usage:        5 bytes
   860 ;; Hardware stack levels used:    1
   861 ;; Hardware stack levels required when called:    2
   862 ;; This function calls:
   863 ;;		_Write_EEPROM_u8
   864 ;; This function is called by:
   865 ;;		_main
   866 ;; This function uses a non-reentrant model
   867 ;;
   868  0123                     _Write_EEPROM_u16:	
   869                           
   870                           ; Regs used in _Write_EEPROM_u16: [wreg+status,2+status,0+pclath+cstack]
   871                           ;Write_EEPROM_u16@EEAddress stored from wreg
   872  0123  00A6               	movwf	Write_EEPROM_u16@EEAddress
   873                           
   874                           ;myeeprom.c: 29: unsigned char DATA_L=0;
   875  0124  01A5               	clrf	Write_EEPROM_u16@DATA_L
   876                           
   877                           ;myeeprom.c: 31: DATA_H = (EEDatas>>8)&0xff;
   878  0125  0875               	movf	Write_EEPROM_u16@EEDatas+1,w
   879  0126  00A4               	movwf	Write_EEPROM_u16@DATA_H
   880                           
   881                           ;myeeprom.c: 32: DATA_L = EEDatas&0xff;
   882  0127  0874               	movf	Write_EEPROM_u16@EEDatas,w
   883  0128  00A5               	movwf	Write_EEPROM_u16@DATA_L
   884                           
   885                           ;myeeprom.c: 33: Write_EEPROM_u8(EEAddress,DATA_H);
   886  0129  0824               	movf	Write_EEPROM_u16@DATA_H,w
   887  012A  00F2               	movwf	?_Write_EEPROM_u8
   888  012B  0826               	movf	Write_EEPROM_u16@EEAddress,w
   889  012C  209C               	fcall	_Write_EEPROM_u8
   890                           
   891                           ;myeeprom.c: 34: Write_EEPROM_u8(EEAddress+1,DATA_L);
   892  012D  1283               	bcf	3,5	;RP0=0, select bank0
   893  012E  0825               	movf	Write_EEPROM_u16@DATA_L,w
   894  012F  00F2               	movwf	?_Write_EEPROM_u8
   895  0130  0A26               	incf	Write_EEPROM_u16@EEAddress,w
   896  0131  289C               	ljmp	_Write_EEPROM_u8
   897  0132                     __end_of_Write_EEPROM_u16:	
   898                           
   899                           	psect	text520
   900  00E8                     __ptext520:	
   901 ;; =============== function _Write_EEPROM_u16 ends ============
   902                           
   903                           
   904 ;; *************** function _Delay_xms *****************
   905 ;; Defined at:
   906 ;;		line 46 in file "myconfiguration.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;  x               2    2[COMMON] unsigned int 
   909 ;; Auto vars:     Size  Location     Type
   910 ;;  i               2    6[COMMON] unsigned int 
   911 ;; Return value:  Size  Location     Type
   912 ;;		None               void
   913 ;; Registers used:
   914 ;;		wreg, status,2, status,0
   915 ;; Tracked objects:
   916 ;;		On entry : 40/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMMON   BANK0   BANK1
   920 ;;      Params:         2       0       0
   921 ;;      Locals:         2       0       0
   922 ;;      Temps:          2       0       0
   923 ;;      Totals:         6       0       0
   924 ;;Total ram usage:        6 bytes
   925 ;; Hardware stack levels used:    1
   926 ;; Hardware stack levels required when called:    1
   927 ;; This function calls:
   928 ;;		Nothing
   929 ;; This function is called by:
   930 ;;		_main
   931 ;;		_ADC_Init
   932 ;;		_LED_Study_End
   933 ;; This function uses a non-reentrant model
   934 ;;
   935  00E8                     _Delay_xms:	
   936  00E8                     l6690:	
   937                           ; Regs used in _Delay_xms: [wreg+status,2+status,0]
   938                           
   939                           
   940                           ;myconfiguration.c: 47: unsigned int i;
   941                           ;myconfiguration.c: 48: for(i=0;i<x;i++){
   942  00E8  01F6               	clrf	Delay_xms@i
   943  00E9  01F7               	clrf	Delay_xms@i+1
   944  00EA                     l6698:	
   945  00EA  0873               	movf	Delay_xms@x+1,w
   946  00EB  0277               	subwf	Delay_xms@i+1,w
   947  00EC  1D03               	skipz
   948  00ED  28F0               	goto	u135
   949  00EE  0872               	movf	Delay_xms@x,w
   950  00EF  0276               	subwf	Delay_xms@i,w
   951  00F0                     u135:	
   952  00F0  1803               	btfsc	3,0
   953  00F1  0008               	return
   954                           
   955                           ;myconfiguration.c: 49: _delay((unsigned long)((1)*(16000000/4000.0)));
   956  00F2  3006               	movlw	6
   957  00F3  00F5               	movwf	??_Delay_xms+1
   958  00F4  3030               	movlw	48
   959  00F5  00F4               	movwf	??_Delay_xms
   960  00F6                     u267:	
   961  00F6  0BF4               	decfsz	??_Delay_xms,f
   962  00F7  28F6               	goto	u267
   963  00F8  0BF5               	decfsz	??_Delay_xms+1,f
   964  00F9  28F6               	goto	u267
   965  00FA  0064               	clrwdt
   966  00FB  0064               	clrwdt	;#
   967  00FC  0AF6               	incf	Delay_xms@i,f
   968  00FD  1903               	skipnz
   969  00FE  0AF7               	incf	Delay_xms@i+1,f
   970  00FF  28EA               	goto	l6698
   971  0100                     __end_of_Delay_xms:	
   972                           
   973                           	psect	text521
   974  00CF                     __ptext521:	
   975 ;; =============== function _Delay_xms ends ============
   976                           
   977                           
   978 ;; *************** function _ExchChannel *****************
   979 ;; Defined at:
   980 ;;		line 70 in file "myadc.c"
   981 ;; Parameters:    Size  Location     Type
   982 ;;  ch_temp         1    wreg     unsigned char 
   983 ;; Auto vars:     Size  Location     Type
   984 ;;  ch_temp         1    4[COMMON] unsigned char 
   985 ;;  adc_ch_temp     1    5[COMMON] unsigned char 
   986 ;; Return value:  Size  Location     Type
   987 ;;		None               void
   988 ;; Registers used:
   989 ;;		wreg, status,2, status,0
   990 ;; Tracked objects:
   991 ;;		On entry : 0/0
   992 ;;		On exit  : 60/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMMON   BANK0   BANK1
   995 ;;      Params:         0       0       0
   996 ;;      Locals:         2       0       0
   997 ;;      Temps:          2       0       0
   998 ;;      Totals:         4       0       0
   999 ;;Total ram usage:        4 bytes
  1000 ;; Hardware stack levels used:    1
  1001 ;; Hardware stack levels required when called:    1
  1002 ;; This function calls:
  1003 ;;		Nothing
  1004 ;; This function is called by:
  1005 ;;		_main
  1006 ;; This function uses a non-reentrant model
  1007 ;;
  1008  00CF                     _ExchChannel:	
  1009                           
  1010                           ; Regs used in _ExchChannel: [wreg+status,2+status,0]
  1011                           ;ExchChannel@ch_temp stored from wreg
  1012  00CF  00F4               	movwf	ExchChannel@ch_temp
  1013                           
  1014                           ;myadc.c: 71: unsigned char adc_ch_temp;
  1015                           ;myadc.c: 73: adc_ch_temp = ch_temp;
  1016  00D0  00F5               	movwf	ExchChannel@adc_ch_temp
  1017                           
  1018                           ;myadc.c: 74: adc_ch_temp = adc_ch_temp<<2;
  1019  00D1  1003               	clrc
  1020  00D2  0DF5               	rlf	ExchChannel@adc_ch_temp,f
  1021  00D3  1003               	clrc
  1022  00D4  0DF5               	rlf	ExchChannel@adc_ch_temp,f
  1023                           
  1024                           ;myadc.c: 75: ADCON0 = (ADCON0&0xe3)|adc_ch_temp;
  1025  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  1026  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  1027  00D7  081F               	movf	31,w
  1028  00D8  39E3               	andlw	227
  1029  00D9  0475               	iorwf	ExchChannel@adc_ch_temp,w
  1030  00DA  009F               	movwf	31	;volatile
  1031                           
  1032                           ;myadc.c: 76: _delay((unsigned long)((1)*(16000000/4000.0)));
  1033  00DB  3006               	movlw	6
  1034  00DC  00F3               	movwf	??_ExchChannel+1
  1035  00DD  3030               	movlw	48
  1036  00DE  00F2               	movwf	??_ExchChannel
  1037  00DF                     u277:	
  1038  00DF  0BF2               	decfsz	??_ExchChannel,f
  1039  00E0  28DF               	goto	u277
  1040  00E1  0BF3               	decfsz	??_ExchChannel+1,f
  1041  00E2  28DF               	goto	u277
  1042  00E3  0064               	clrwdt
  1043                           
  1044                           ;myadc.c: 77: GO_DONE=1;
  1045  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1046  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1047  00E6  149F               	bsf	31,1
  1048  00E7  0008               	return
  1049  00E8                     __end_of_ExchChannel:	
  1050                           
  1051                           	psect	text522
  1052  0113                     __ptext522:	
  1053 ;; =============== function _ExchChannel ends ============
  1054                           
  1055                           
  1056 ;; *************** function _Read_EEPROM_u16 *****************
  1057 ;; Defined at:
  1058 ;;		line 39 in file "myeeprom.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;  EEAddress       1    wreg     unsigned char 
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;  EEAddress       1    2[BANK0 ] unsigned char 
  1063 ;;  EepromData      2    0[BANK0 ] unsigned int 
  1064 ;; Return value:  Size  Location     Type
  1065 ;;                  2    4[COMMON] unsigned int 
  1066 ;; Registers used:
  1067 ;;		wreg, status,2, status,0, pclath, cstack
  1068 ;; Tracked objects:
  1069 ;;		On entry : 60/0
  1070 ;;		On exit  : 60/0
  1071 ;;		Unchanged: FFF9F/0
  1072 ;; Data sizes:     COMMON   BANK0   BANK1
  1073 ;;      Params:         2       0       0
  1074 ;;      Locals:         0       3       0
  1075 ;;      Temps:          0       0       0
  1076 ;;      Totals:         2       3       0
  1077 ;;Total ram usage:        5 bytes
  1078 ;; Hardware stack levels used:    1
  1079 ;; Hardware stack levels required when called:    2
  1080 ;; This function calls:
  1081 ;;		_Read_EEPROM_u8
  1082 ;; This function is called by:
  1083 ;;		_main
  1084 ;; This function uses a non-reentrant model
  1085 ;;
  1086  0113                     _Read_EEPROM_u16:	
  1087                           
  1088                           ; Regs used in _Read_EEPROM_u16: [wreg+status,2+status,0+pclath+cstack]
  1089                           ;Read_EEPROM_u16@EEAddress stored from wreg
  1090  0113  00A6               	movwf	Read_EEPROM_u16@EEAddress
  1091                           
  1092                           ;myeeprom.c: 42: EepromData = Read_EEPROM_u8(EEAddress);
  1093  0114  214D               	fcall	_Read_EEPROM_u8
  1094  0115  1283               	bcf	3,5	;RP0=0, select bank0
  1095  0116  00A4               	movwf	Read_EEPROM_u16@EepromData
  1096  0117  01A5               	clrf	Read_EEPROM_u16@EepromData+1
  1097                           
  1098                           ;myeeprom.c: 43: EepromData = EepromData<<8;
  1099  0118  00A5               	movwf	Read_EEPROM_u16@EepromData+1
  1100  0119  01A4               	clrf	Read_EEPROM_u16@EepromData
  1101                           
  1102                           ;myeeprom.c: 44: EepromData |= Read_EEPROM_u8(EEAddress+1);
  1103  011A  0A26               	incf	Read_EEPROM_u16@EEAddress,w
  1104  011B  214D               	fcall	_Read_EEPROM_u8
  1105  011C  1283               	bcf	3,5	;RP0=0, select bank0
  1106  011D  04A4               	iorwf	Read_EEPROM_u16@EepromData,f
  1107                           
  1108                           ;myeeprom.c: 45: return EepromData;
  1109  011E  0825               	movf	Read_EEPROM_u16@EepromData+1,w
  1110  011F  00F5               	movwf	?_Read_EEPROM_u16+1
  1111  0120  0824               	movf	Read_EEPROM_u16@EepromData,w
  1112  0121  00F4               	movwf	?_Read_EEPROM_u16
  1113  0122  0008               	return
  1114  0123                     __end_of_Read_EEPROM_u16:	
  1115                           
  1116                           	psect	text523
  1117  0145                     __ptext523:	
  1118 ;; =============== function _Read_EEPROM_u16 ends ============
  1119                           
  1120                           
  1121 ;; *************** function _EEPROM_Init *****************
  1122 ;; Defined at:
  1123 ;;		line 13 in file "myeeprom.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;		None
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;		None
  1128 ;; Return value:  Size  Location     Type
  1129 ;;		None               void
  1130 ;; Registers used:
  1131 ;;		wreg, status,2, status,0, pclath, cstack
  1132 ;; Tracked objects:
  1133 ;;		On entry : 60/0
  1134 ;;		On exit  : 60/20
  1135 ;;		Unchanged: FFE00/0
  1136 ;; Data sizes:     COMMON   BANK0   BANK1
  1137 ;;      Params:         0       0       0
  1138 ;;      Locals:         0       0       0
  1139 ;;      Temps:          0       0       0
  1140 ;;      Totals:         0       0       0
  1141 ;;Total ram usage:        0 bytes
  1142 ;; Hardware stack levels used:    1
  1143 ;; Hardware stack levels required when called:    2
  1144 ;; This function calls:
  1145 ;;		_Write_EEPROM_u8
  1146 ;; This function is called by:
  1147 ;;		_main
  1148 ;; This function uses a non-reentrant model
  1149 ;;
  1150  0145                     _EEPROM_Init:	
  1151                           
  1152                           ;myeeprom.c: 14: Write_EEPROM_u8(0xFF,0xAA);
  1153                           
  1154                           ; Regs used in _EEPROM_Init: [wreg+status,2+status,0+pclath+cstack]
  1155  0145  30AA               	movlw	170
  1156  0146  00F2               	movwf	?_Write_EEPROM_u8
  1157  0147  30FF               	movlw	255
  1158  0148  209C               	fcall	_Write_EEPROM_u8
  1159                           
  1160                           ;myeeprom.c: 15: Write_EEPROM_u8(0xFF,0xAA);
  1161  0149  30AA               	movlw	170
  1162  014A  00F2               	movwf	?_Write_EEPROM_u8
  1163  014B  30FF               	movlw	255
  1164  014C  289C               	ljmp	_Write_EEPROM_u8
  1165  014D                     __end_of_EEPROM_Init:	
  1166                           
  1167                           	psect	text524
  1168  014D                     __ptext524:	
  1169 ;; =============== function _EEPROM_Init ends ============
  1170                           
  1171                           
  1172 ;; *************** function _Read_EEPROM_u8 *****************
  1173 ;; Defined at:
  1174 ;;		line 64 in file "myeeprom.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;  EEAddress       1    wreg     unsigned char 
  1177 ;; Auto vars:     Size  Location     Type
  1178 ;;  EEAddress       1    2[COMMON] unsigned char 
  1179 ;;  ReEepromData    1    3[COMMON] unsigned char 
  1180 ;; Return value:  Size  Location     Type
  1181 ;;                  1    wreg      unsigned char 
  1182 ;; Registers used:
  1183 ;;		wreg
  1184 ;; Tracked objects:
  1185 ;;		On entry : 60/0
  1186 ;;		On exit  : 60/20
  1187 ;;		Unchanged: FFF9F/0
  1188 ;; Data sizes:     COMMON   BANK0   BANK1
  1189 ;;      Params:         0       0       0
  1190 ;;      Locals:         2       0       0
  1191 ;;      Temps:          0       0       0
  1192 ;;      Totals:         2       0       0
  1193 ;;Total ram usage:        2 bytes
  1194 ;; Hardware stack levels used:    1
  1195 ;; Hardware stack levels required when called:    1
  1196 ;; This function calls:
  1197 ;;		Nothing
  1198 ;; This function is called by:
  1199 ;;		_Read_EEPROM_u16
  1200 ;; This function uses a non-reentrant model
  1201 ;;
  1202  014D                     _Read_EEPROM_u8:	
  1203                           
  1204                           ; Regs used in _Read_EEPROM_u8: [wreg]
  1205                           ;Read_EEPROM_u8@EEAddress stored from wreg
  1206  014D  00F2               	movwf	Read_EEPROM_u8@EEAddress
  1207                           
  1208                           ;myeeprom.c: 65: unsigned char ReEepromData;
  1209                           ;myeeprom.c: 67: EEADR = EEAddress;
  1210  014E  1683               	bsf	3,5	;RP0=1, select bank1
  1211  014F  009B               	movwf	27	;volatile
  1212                           
  1213                           ;myeeprom.c: 68: RD = 1;
  1214  0150  141C               	bsf	28,0
  1215                           
  1216                           ;myeeprom.c: 69: ReEepromData = EEDAT;
  1217  0151  081A               	movf	26,w	;volatile
  1218  0152  00F3               	movwf	Read_EEPROM_u8@ReEepromData
  1219                           
  1220                           ;myeeprom.c: 70: RD = 0;
  1221  0153  101C               	bcf	28,0
  1222                           
  1223                           ;myeeprom.c: 71: return ReEepromData;
  1224  0154  0008               	return
  1225  0155                     __end_of_Read_EEPROM_u8:	
  1226                           
  1227                           	psect	text525
  1228  009C                     __ptext525:	
  1229 ;; =============== function _Read_EEPROM_u8 ends ============
  1230                           
  1231                           
  1232 ;; *************** function _Write_EEPROM_u8 *****************
  1233 ;; Defined at:
  1234 ;;		line 49 in file "myeeprom.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;  EEAddress       1    wreg     unsigned char 
  1237 ;;  EEDatas         1    2[COMMON] unsigned char 
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;  EEAddress       1    3[COMMON] unsigned char 
  1240 ;; Return value:  Size  Location     Type
  1241 ;;		None               void
  1242 ;; Registers used:
  1243 ;;		wreg
  1244 ;; Tracked objects:
  1245 ;;		On entry : 40/0
  1246 ;;		On exit  : 60/20
  1247 ;;		Unchanged: FFE00/0
  1248 ;; Data sizes:     COMMON   BANK0   BANK1
  1249 ;;      Params:         1       0       0
  1250 ;;      Locals:         1       0       0
  1251 ;;      Temps:          0       0       0
  1252 ;;      Totals:         2       0       0
  1253 ;;Total ram usage:        2 bytes
  1254 ;; Hardware stack levels used:    1
  1255 ;; Hardware stack levels required when called:    1
  1256 ;; This function calls:
  1257 ;;		Nothing
  1258 ;; This function is called by:
  1259 ;;		_EEPROM_Init
  1260 ;;		_Write_EEPROM_u16
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263  009C                     _Write_EEPROM_u8:	
  1264                           
  1265                           ; Regs used in _Write_EEPROM_u8: [wreg]
  1266                           ;Write_EEPROM_u8@EEAddress stored from wreg
  1267  009C  00F3               	movwf	Write_EEPROM_u8@EEAddress
  1268                           
  1269                           ;myeeprom.c: 50: GIE = 0;
  1270  009D  138B               	bcf	11,7
  1271  009E                     l4345:	
  1272                           ;myeeprom.c: 51: while(GIE) asm("clrwdt");
  1273                           
  1274  009E  1F8B               	btfss	11,7
  1275  009F  28A2               	goto	l6806
  1276  00A0  0064               	clrwdt	;#
  1277  00A1  289E               	goto	l4345
  1278  00A2                     l6806:	
  1279                           
  1280                           ;myeeprom.c: 52: EEADR = EEAddress;
  1281  00A2  0873               	movf	Write_EEPROM_u8@EEAddress,w
  1282  00A3  1683               	bsf	3,5	;RP0=1, select bank1
  1283  00A4  1303               	bcf	3,6	;RP1=0, select bank1
  1284  00A5  009B               	movwf	27	;volatile
  1285                           
  1286                           ;myeeprom.c: 53: EEDAT = EEDatas;
  1287  00A6  0872               	movf	Write_EEPROM_u8@EEDatas,w
  1288  00A7  009A               	movwf	26	;volatile
  1289  00A8  3034               	movlw	52
  1290                           
  1291                           ;myeeprom.c: 54: EEIF = 0;
  1292  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  1293  00AA  138C               	bcf	12,7
  1294                           
  1295                           ;myeeprom.c: 55: EECON1 = 0x34;
  1296  00AB  1683               	bsf	3,5	;RP0=1, select bank1
  1297  00AC  009C               	movwf	28	;volatile
  1298                           
  1299                           ;myeeprom.c: 56: WR = 1;
  1300  00AD  141D               	bsf	29,0
  1301  00AE                     l4348:	
  1302                           ;myeeprom.c: 57: while(WR) asm("clrwdt");
  1303                           
  1304  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  1305  00AF  1303               	bcf	3,6	;RP1=0, select bank1
  1306  00B0  1C1D               	btfss	29,0
  1307  00B1  28B4               	goto	l4350
  1308  00B2  0064               	clrwdt	;#
  1309  00B3  28AE               	goto	l4348
  1310  00B4                     l4350:	
  1311                           
  1312                           ;myeeprom.c: 59: GIE = 1;
  1313  00B4  178B               	bsf	11,7
  1314  00B5  0008               	return
  1315  00B6                     __end_of_Write_EEPROM_u8:	
  1316                           
  1317                           	psect	text526
  1318  013C                     __ptext526:	
  1319 ;; =============== function _Write_EEPROM_u8 ends ============
  1320                           
  1321                           
  1322 ;; *************** function _isKeyPressed *****************
  1323 ;; Defined at:
  1324 ;;		line 18 in file "MyKey.c"
  1325 ;; Parameters:    Size  Location     Type
  1326 ;;		None
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;		None
  1329 ;; Return value:  Size  Location     Type
  1330 ;;                  1    wreg      unsigned char 
  1331 ;; Registers used:
  1332 ;;		wreg, status,2, status,0
  1333 ;; Tracked objects:
  1334 ;;		On entry : 0/0
  1335 ;;		On exit  : 60/0
  1336 ;;		Unchanged: FFF9F/0
  1337 ;; Data sizes:     COMMON   BANK0   BANK1
  1338 ;;      Params:         0       0       0
  1339 ;;      Locals:         0       0       0
  1340 ;;      Temps:          0       0       0
  1341 ;;      Totals:         0       0       0
  1342 ;;Total ram usage:        0 bytes
  1343 ;; Hardware stack levels used:    1
  1344 ;; Hardware stack levels required when called:    1
  1345 ;; This function calls:
  1346 ;;		Nothing
  1347 ;; This function is called by:
  1348 ;;		_main
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351  013C                     _isKeyPressed:	
  1352                           
  1353                           ;MyKey.c: 19: return PC3 ? 0:1;
  1354                           
  1355                           ; Regs used in _isKeyPressed: [wreg+status,2+status,0]
  1356  013C  1003               	clrc
  1357  013D  1283               	bcf	3,5	;RP0=0, select bank0
  1358  013E  1303               	bcf	3,6	;RP1=0, select bank0
  1359  013F  1D87               	btfss	7,3
  1360  0140  1403               	setc
  1361  0141  3000               	movlw	0
  1362  0142  1803               	skipnc
  1363  0143  3001               	movlw	1
  1364  0144  0008               	return
  1365  0145                     __end_of_isKeyPressed:	
  1366                           
  1367                           	psect	text527
  1368  0100                     __ptext527:	
  1369 ;; =============== function _isKeyPressed ends ============
  1370                           
  1371                           
  1372 ;; *************** function _GetADCValue *****************
  1373 ;; Defined at:
  1374 ;;		line 48 in file "myadc.c"
  1375 ;; Parameters:    Size  Location     Type
  1376 ;;		None
  1377 ;; Auto vars:     Size  Location     Type
  1378 ;;  ADC_num         2    4[COMMON] unsigned short 
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  2    2[COMMON] unsigned short 
  1381 ;; Registers used:
  1382 ;;		wreg, status,2
  1383 ;; Tracked objects:
  1384 ;;		On entry : 60/0
  1385 ;;		On exit  : 60/0
  1386 ;;		Unchanged: FFF9F/0
  1387 ;; Data sizes:     COMMON   BANK0   BANK1
  1388 ;;      Params:         2       0       0
  1389 ;;      Locals:         2       0       0
  1390 ;;      Temps:          0       0       0
  1391 ;;      Totals:         4       0       0
  1392 ;;Total ram usage:        4 bytes
  1393 ;; Hardware stack levels used:    1
  1394 ;; Hardware stack levels required when called:    1
  1395 ;; This function calls:
  1396 ;;		Nothing
  1397 ;; This function is called by:
  1398 ;;		_main
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401  0100                     _GetADCValue:	
  1402                           
  1403                           ;myadc.c: 49: unsigned short int ADC_num=0;
  1404                           
  1405                           ; Regs used in _GetADCValue: [wreg+status,2]
  1406  0100  01F4               	clrf	GetADCValue@ADC_num
  1407  0101  01F5               	clrf	GetADCValue@ADC_num+1
  1408                           
  1409                           ;myadc.c: 51: if(GO_DONE==0){
  1410  0102  189F               	btfsc	31,1
  1411  0103  290E               	goto	l2184
  1412                           
  1413                           ;myadc.c: 52: ADC_num=ADRESH;
  1414  0104  081E               	movf	30,w	;volatile
  1415  0105  00F4               	movwf	GetADCValue@ADC_num
  1416  0106  01F5               	clrf	GetADCValue@ADC_num+1
  1417                           
  1418                           ;myadc.c: 53: ADC_num=ADC_num<<8;
  1419  0107  00F5               	movwf	GetADCValue@ADC_num+1
  1420  0108  01F4               	clrf	GetADCValue@ADC_num
  1421                           
  1422                           ;myadc.c: 54: ADC_num=ADC_num|ADRESL;
  1423  0109  1683               	bsf	3,5	;RP0=1, select bank1
  1424  010A  081E               	movf	30,w	;volatile
  1425  010B  04F4               	iorwf	GetADCValue@ADC_num,f
  1426                           
  1427                           ;myadc.c: 55: GO_DONE=1;
  1428  010C  1283               	bcf	3,5	;RP0=0, select bank0
  1429  010D  149F               	bsf	31,1
  1430  010E                     l2184:	
  1431                           
  1432                           ;myadc.c: 56: }
  1433                           ;myadc.c: 57: return ADC_num;
  1434  010E  0875               	movf	GetADCValue@ADC_num+1,w
  1435  010F  00F3               	movwf	?_GetADCValue+1
  1436  0110  0874               	movf	GetADCValue@ADC_num,w
  1437  0111  00F2               	movwf	?_GetADCValue
  1438  0112  0008               	return
  1439  0113                     __end_of_GetADCValue:	
  1440                           
  1441                           	psect	text528
  1442  0060                     __ptext528:	
  1443 ;; =============== function _GetADCValue ends ============
  1444                           
  1445                           
  1446 ;; *************** function _GPIO_Init *****************
  1447 ;; Defined at:
  1448 ;;		line 22 in file "myconfiguration.c"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;		None
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;		None
  1453 ;; Return value:  Size  Location     Type
  1454 ;;		None               void
  1455 ;; Registers used:
  1456 ;;		None
  1457 ;; Tracked objects:
  1458 ;;		On entry : 17F/0
  1459 ;;		On exit  : 17F/20
  1460 ;;		Unchanged: FFE80/0
  1461 ;; Data sizes:     COMMON   BANK0   BANK1
  1462 ;;      Params:         0       0       0
  1463 ;;      Locals:         0       0       0
  1464 ;;      Temps:          0       0       0
  1465 ;;      Totals:         0       0       0
  1466 ;;Total ram usage:        0 bytes
  1467 ;; Hardware stack levels used:    1
  1468 ;; Hardware stack levels required when called:    1
  1469 ;; This function calls:
  1470 ;;		Nothing
  1471 ;; This function is called by:
  1472 ;;		_main
  1473 ;; This function uses a non-reentrant model
  1474 ;;
  1475  0060                     _GPIO_Init:	
  1476                           
  1477                           ;myconfiguration.c: 24: TRISA0=0;
  1478                           
  1479                           ; Regs used in _GPIO_Init: []
  1480  0060  1683               	bsf	3,5	;RP0=1, select bank1
  1481  0061  1005               	bcf	5,0
  1482                           
  1483                           ;myconfiguration.c: 25: TRISA1=0;
  1484  0062  1085               	bcf	5,1
  1485                           
  1486                           ;myconfiguration.c: 26: TRISA6=0;
  1487  0063  1305               	bcf	5,6
  1488                           
  1489                           ;myconfiguration.c: 28: TRISC1=0;
  1490  0064  1087               	bcf	7,1
  1491                           
  1492                           ;myconfiguration.c: 29: TRISC2=0;
  1493  0065  1107               	bcf	7,2
  1494                           
  1495                           ;myconfiguration.c: 30: TRISC3=1;
  1496  0066  1587               	bsf	7,3
  1497                           
  1498                           ;myconfiguration.c: 32: CM0=1;CM1=1;CM2=1;
  1499  0067  1283               	bcf	3,5	;RP0=0, select bank0
  1500  0068  1419               	bsf	25,0
  1501  0069  1499               	bsf	25,1
  1502  006A  1519               	bsf	25,2
  1503                           
  1504                           ;myconfiguration.c: 36: ANSEL0=0;ANSEL1=0;ANSEL2=0;ANSEL3=0;ANSEL4=0;ANSEL5=0;ANSEL6=0;A
      +                          NSEL7=0;
  1505  006B  1683               	bsf	3,5	;RP0=1, select bank1
  1506  006C  1011               	bcf	17,0
  1507  006D  1091               	bcf	17,1
  1508  006E  1111               	bcf	17,2
  1509  006F  1191               	bcf	17,3
  1510  0070  1211               	bcf	17,4
  1511  0071  1291               	bcf	17,5
  1512  0072  1311               	bcf	17,6
  1513  0073  1391               	bcf	17,7
  1514                           
  1515                           ;myconfiguration.c: 38: WPUA0=1;WPUA1=1;WPUA6=1;
  1516  0074  1415               	bsf	21,0
  1517  0075  1495               	bsf	21,1
  1518  0076  1715               	bsf	21,6
  1519                           
  1520                           ;myconfiguration.c: 40: WPUC1=1;WPUC2=1;WPUC3=1;
  1521  0077  1488               	bsf	8,1
  1522  0078  1508               	bsf	8,2
  1523  0079  1588               	bsf	8,3
  1524                           
  1525                           ;myconfiguration.c: 42: WPDA4=0;WPDC1=0;WPDC2=0;WPDC3=0;
  1526  007A  1209               	bcf	9,4
  1527  007B  1189               	bcf	9,3
  1528  007C  1109               	bcf	9,2
  1529  007D  1089               	bcf	9,1
  1530  007E  0008               	return
  1531  007F                     __end_of_GPIO_Init:	
  1532                           
  1533                           	psect	text529
  1534  0155                     __ptext529:	
  1535 ;; =============== function _GPIO_Init ends ============
  1536                           
  1537                           
  1538 ;; *************** function _System_init *****************
  1539 ;; Defined at:
  1540 ;;		line 13 in file "myconfiguration.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;		None
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;		None
  1545 ;; Return value:  Size  Location     Type
  1546 ;;		None               void
  1547 ;; Registers used:
  1548 ;;		wreg, status,2
  1549 ;; Tracked objects:
  1550 ;;		On entry : 17F/0
  1551 ;;		On exit  : 17F/0
  1552 ;;		Unchanged: FFE80/0
  1553 ;; Data sizes:     COMMON   BANK0   BANK1
  1554 ;;      Params:         0       0       0
  1555 ;;      Locals:         0       0       0
  1556 ;;      Temps:          0       0       0
  1557 ;;      Totals:         0       0       0
  1558 ;;Total ram usage:        0 bytes
  1559 ;; Hardware stack levels used:    1
  1560 ;; Hardware stack levels required when called:    1
  1561 ;; This function calls:
  1562 ;;		Nothing
  1563 ;; This function is called by:
  1564 ;;		_main
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567  0155                     _System_init:	
  1568                           
  1569                           ;myconfiguration.c: 15: OPTION = 0B00000000;
  1570                           
  1571                           ; Regs used in _System_init: [wreg+status,2]
  1572  0155  1683               	bsf	3,5	;RP0=1, select bank1
  1573  0156  0181               	clrf	1	;volatile
  1574                           
  1575                           ;myconfiguration.c: 16: OSCCON = 0B01110000;
  1576  0157  3070               	movlw	112
  1577  0158  008F               	movwf	15	;volatile
  1578                           
  1579                           ;myconfiguration.c: 17: WDTCON = 0B00001000;
  1580  0159  3008               	movlw	8
  1581  015A  1283               	bcf	3,5	;RP0=0, select bank0
  1582  015B  0098               	movwf	24	;volatile
  1583  015C  0008               	return
  1584  015D                     __end_of_System_init:	
  1585                           
  1586                           	psect	text530
  1587  015D                     __ptext530:	
  1588 ;; =============== function _System_init ends ============
  1589                           
  1590                           
  1591 ;; *************** function _ISR *****************
  1592 ;; Defined at:
  1593 ;;		line 81 in file "main.c"
  1594 ;; Parameters:    Size  Location     Type
  1595 ;;		None
  1596 ;; Auto vars:     Size  Location     Type
  1597 ;;		None
  1598 ;; Return value:  Size  Location     Type
  1599 ;;		None               void
  1600 ;; Registers used:
  1601 ;;		None
  1602 ;; Tracked objects:
  1603 ;;		On entry : 0/0
  1604 ;;		On exit  : 0/0
  1605 ;;		Unchanged: FFFFF/0
  1606 ;; Data sizes:     COMMON   BANK0   BANK1
  1607 ;;      Params:         0       0       0
  1608 ;;      Locals:         0       0       0
  1609 ;;      Temps:          2       0       0
  1610 ;;      Totals:         2       0       0
  1611 ;;Total ram usage:        2 bytes
  1612 ;; Hardware stack levels used:    1
  1613 ;; This function calls:
  1614 ;;		Nothing
  1615 ;; This function is called by:
  1616 ;;		Interrupt level 1
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619  015D                     _ISR:	
  1620  015D  0871               	movf	??_ISR+1,w
  1621  015E  008A               	movwf	10
  1622  015F  0E70               	swapf	??_ISR^(0+-128),w
  1623  0160  0083               	movwf	3
  1624  0161  0EFE               	swapf	126,f
  1625  0162  0E7E               	swapf	126,w
  1626  0163  0009               	retfie
  1627  0164                     __end_of_ISR:	
  1628                           
  1629                           	psect	intentry
  1630  0004                     __pintentry:	
  1631                           ; Regs used in _ISR: []
  1632                           
  1633  0004                     interrupt_function:	
  1634  007E                     saved_w	set	btemp
  1635  0004  00FE               	movwf	btemp
  1636  0005  0E03               	swapf	3,w
  1637  0006  00F0               	movwf	??_ISR
  1638  0007  080A               	movf	10,w
  1639  0008  00F1               	movwf	??_ISR+1
  1640  0009  295D               	ljmp	_ISR
  1641                           
  1642                           	psect	text531
  1643  0000                     __ptext531:	
  1644 ;; =============== function _ISR ends ============
  1645                           
  1646  007E                     btemp	set	126	;btemp
  1647  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Thu Jun 07 18:19:00 2018

                         _i 007A                           _j 007B                          _RD 04E0  
                        _WR 04E8               ??_ExchChannel 0072                         _CM0 00C8  
                       _CM1 00C9                         _CM2 00CA                         _GIE 005F  
                       _PC2 003A                         _PA6 002E                         _PC3 003B  
                       u135 00F0                         u255 005C                         u267 00F6  
                       _ISR 015D                         u277 00DF                         _SR0 0CF6  
                       _SR1 0CF7      __size_of_LED_Study_End 000F                        ?_ISR 0070  
                      l1102 004D   __size_of_Write_EEPROM_u16 000F                        l2181 0000  
                      l2184 010E                        l2185 0000                        l2188 0000  
                      l3255 0000                        l3264 0000                        l3258 0000  
                      l3267 0000                        l4350 00B4                        l4342 0000  
                      l4351 0000                        l4336 0000                        l4345 009E  
                      l4354 0000                        l4339 0000                        l4348 00AE  
                      l5419 0000                        l6630 0000                        l6710 0000  
                      l6632 0000                        l6720 0000                        l6712 0000  
                      _ADFM 00FF                        l6634 0000                        l6642 0000  
                      l6810 0000                        l6722 0000                        l6714 0000  
                      l6730 0000                        l6628 0000                        l6636 0000  
                      l6804 0000                        l6812 0000                        l6820 0000  
                      l6724 0000                        l6716 0000                        l6740 0000  
                      l6732 0000                        l6900 0056                        l6638 0000  
                      l6646 0000                        l6806 00A2                        l6814 0000  
                      l6830 0000                        l6822 0000                        l6726 0000  
                      l6718 0000                        l6742 0000                        l6734 0000  
                      l6808 0000                        l6816 0000                        l6824 0000  
                      l6680 0000                        l6840 0000                        l6728 0000  
                      l6736 0000                        l6826 0000                        l6682 0000  
                      l6690 00E8                        l6842 0000                        l6834 0000  
                      l6738 0000                        l6850 0000                        l6828 0000  
                      l6684 0000                        l6836 0000                        l6860 0000  
                      l6852 0000                        l6844 0000                        l6686 0000  
                      l6694 0000                        l6838 0000                        l6870 0000  
                      l6854 0000                        l6846 0000                        l6688 0000  
                      l6696 0000                        l6880 0028                        l6856 0000  
                      l6848 0000                        l6698 00EA                        l6890 0000  
                      l6882 0000                        l6874 0000                        l6866 001B  
                      l6858 0018                        l6892 0000                        l6884 0000  
                      l6868 0000                        _ADON 00F8                        l6894 0000  
                      l6896 0000                        l6898 0054                        _CHS0 00FA  
                      _CHS1 00FB                        _CHS2 00FC                        _EEIF 0067  
                      _DIVS 04FF                        _STRA 0CE8                        _STRB 0CE9  
                      _STRC 0CEA                        _STRD 0CEB                        _WREN 0C62  
            ??_isKeyPressed 0072                        _main 000B                        btemp 007E  
          __end_of_ADC_Init 00CF                 _GetADCValue 0100                        start 000A  
        __size_of_GPIO_Init 001F              _Read_EEPROM_u8 014D        __size_of_System_init 0008  
                     ??_ISR 0070   Read_EEPROM_u16@EepromData 0024                       _C1SEN 0CF5  
                     _C2REN 0CF4                       _ADCS0 04FC                       _ADCS1 04FD  
                     _ADCS2 04FE                       ?_main 0070                       _EEADR 009B  
                     _EEDAT 009A                       _EEPGD 0C67                       _VCFG0 00FD  
                     _WPDA4 044C                       _WPDC1 044B                       _WPDC2 044A  
                     _SRCON 019E                       _WPDC3 0449                       _PULSR 0CF2  
                     _PULSS 0CF3                       _WPUA0 04A8                       _WPUA1 04A9  
                     _WPUC1 0441                       _WPUC2 0442                       _WPUA6 04AE  
                     _WPUC3 0443         __end_of_ExchChannel 00E8                       pclath 000A  
                     status 0003    Read_EEPROM_u16@EEAddress 0026                       wtemp0 007E  
    __end_of_Read_EEPROM_u8 0155             _Read_EEPROM_u16 0113        __size_of_EEPROM_Init 0008  
             _LED_Study_End 007F                __end_of_main 0060      Write_EEPROM_u16@DATA_H 0024  
    Write_EEPROM_u16@DATA_L 0025          __size_of_Delay_xms 0018                      ??_main 0078  
         __end_of_GPIO_Init 007F                      _ADCON0 001F                      _ADRESH 001E  
                    _ADRESL 009E                      _EECON1 009C                      _ANSEL0 0488  
                    _ANSEL1 0489                      _ANSEL2 048A                      _ANSEL3 048B  
                    _ANSEL4 048C                      _ANSEL5 048D                      _ANSEL6 048E  
                    _ANSEL7 048F                      i1l1112 0000                      _OSCCON 008F  
                    _OPTION 0081                      _WDTCON 0018                      _TRISA0 0428  
                    _TRISA1 0429                      _TRISC1 0439                      _TRISC2 043A  
                    _TRISA6 042E                      _TRISC3 043B             ?_Read_EEPROM_u8 0070  
            ?_LED_Study_End 0070      Write_EEPROM_u8@EEDatas 0072        __end_of_isKeyPressed 0145  
               _ExchChannel 00CF    __size_of_Write_EEPROM_u8 001A                   ?_ADC_Init 0070  
                    saved_w 007E            _Write_EEPROM_u16 0123     __end_of_Read_EEPROM_u16 0123  
         __end_of_Delay_xms 0100              __pcstackCOMMON 0070                  ??_ADC_Init 0078  
   Write_EEPROM_u16@EEDatas 0074      ExchChannel@adc_ch_temp 0075     Read_EEPROM_u8@EEAddress 0072  
                __pbssBANK0 0020             ??_LED_Study_End 0078                ?_GetADCValue 0072  
                __pmaintext 000B                  __pintentry 0004                     _GO_DONE 00F9  
                   _PSTRCON 019D                     _STRSYNC 0CEC           ??_Write_EEPROM_u8 0073  
          ?_Read_EEPROM_u16 0074               ??_System_init 0072       __size_of_isKeyPressed 0009  
              __size_of_ISR 0007            ??_Read_EEPROM_u8 0072                   _GPIO_Init 0060  
      end_of_initialization 013A               ??_EEPROM_Init 0074                 _ADC1_ADCOUT 0078  
              _isKeyPressed 013C    __end_of_Write_EEPROM_u16 0132         __end_of_System_init 015D  
              ?_ExchChannel 0070           __size_of_ADC_Init 0019                  ?_GPIO_Init 0070  
        GetADCValue@ADC_num 0074                   _Delay_xms 00E8        __size_of_GetADCValue 0013  
       __end_of_EEPROM_Init 014D         start_initialization 0132                 __end_of_ISR 0164  
               _System_init 0155                  ?_Delay_xms 0072  Read_EEPROM_u8@ReEepromData 0073  
           _Write_EEPROM_u8 009C                 __pbssCOMMON 0078               __pcstackBANK0 0024  
               ??_GPIO_Init 0072          ExchChannel@ch_temp 0074                 _EEPROM_Init 0145  
     __end_of_LED_Study_End 008E                   __ptext520 00E8                   __ptext521 00CF  
                 __ptext530 015D                   __ptext522 0113                   __ptext531 0000  
                 __ptext523 0145                   __ptext524 014D                   __ptext516 0000  
                 __ptext525 009C                   __ptext517 007F                   __ptext526 013C  
                 __ptext518 00B6                   __ptext527 0100                   __ptext519 0123  
                 __ptext528 0060                   __ptext529 0155        __size_of_ExchChannel 0019  
                  _ADC_Init 00B6           interrupt_function 0004                 ??_Delay_xms 0074  
  __size_of_Read_EEPROM_u16 0010                  _ADC6_INPUT 0020     __end_of_Write_EEPROM_u8 00B6  
         ?_Write_EEPROM_u16 0074          ??_Write_EEPROM_u16 0076   Write_EEPROM_u16@EEAddress 0026  
  Write_EEPROM_u8@EEAddress 0073             _ADC_STUDY_VALUE 0022               __size_of_main 0055  
             ??_GetADCValue 0074                ?_System_init 0070     __size_of_Read_EEPROM_u8 0008  
          ?_Write_EEPROM_u8 0072           ??_Read_EEPROM_u16 0076                  Delay_xms@i 0076  
                Delay_xms@x 0072                    intlevel1 0000                ?_EEPROM_Init 0070  
       __end_of_GetADCValue 0113               ?_isKeyPressed 0070  
